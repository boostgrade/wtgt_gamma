// Mocks generated by Mockito 5.0.17 from annotations
// in where_to_go_today/test/authapi/repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i8;

import 'package:mockito/mockito.dart' as _i1;
import 'package:where_to_go_today/src/features/authapi/models/login_object.dart'
    as _i5;
import 'package:where_to_go_today/src/features/authapi/models/requests/apple_login_request.dart'
    as _i12;
import 'package:where_to_go_today/src/features/authapi/models/requests/google_login_request.dart'
    as _i13;
import 'package:where_to_go_today/src/features/authapi/models/requests/meta_login_request.dart'
    as _i11;
import 'package:where_to_go_today/src/features/authapi/models/requests/phone_login_request.dart'
    as _i9;
import 'package:where_to_go_today/src/features/authapi/models/requests/register_request.dart'
    as _i14;
import 'package:where_to_go_today/src/features/authapi/models/requests/vk_login_request.dart'
    as _i10;
import 'package:where_to_go_today/src/features/authapi/models/responses/login_response.dart'
    as _i2;
import 'package:where_to_go_today/src/features/authapi/models/tokens.dart'
    as _i4;
import 'package:where_to_go_today/src/features/authapi/models/user.dart' as _i6;
import 'package:where_to_go_today/src/features/authapi/models/user_dto.dart'
    as _i3;
import 'package:where_to_go_today/src/features/authservices/api/auth_api.dart'
    as _i7;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeLoginResponse_0 extends _i1.Fake implements _i2.LoginResponse {}

class _FakeUserDTO_1 extends _i1.Fake implements _i3.UserDTO {}

class _FakeTokens_2 extends _i1.Fake implements _i4.Tokens {}

class _FakeLoginObject_3 extends _i1.Fake implements _i5.LoginObject {}

class _FakeUser_4 extends _i1.Fake implements _i6.User {}

/// A class which mocks [AuthApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthApi extends _i1.Mock implements _i7.AuthApi {
  MockAuthApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.LoginResponse> loginWithPhone(
          _i9.PhoneLoginRequest? phoneLoginRequest) =>
      (super.noSuchMethod(
              Invocation.method(#loginWithPhone, [phoneLoginRequest]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse_0()))
          as _i8.Future<_i2.LoginResponse>);
  @override
  _i8.Future<_i2.LoginResponse> loginWithVk(
          _i10.VkLoginRequest? vkLoginRequest) =>
      (super.noSuchMethod(Invocation.method(#loginWithVk, [vkLoginRequest]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse_0()))
          as _i8.Future<_i2.LoginResponse>);
  @override
  _i8.Future<_i2.LoginResponse> loginWithMeta(
          _i11.MetaLoginRequest? metaLoginRequest) =>
      (super.noSuchMethod(Invocation.method(#loginWithMeta, [metaLoginRequest]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse_0()))
          as _i8.Future<_i2.LoginResponse>);
  @override
  _i8.Future<_i2.LoginResponse> loginWithApple(
          _i12.AppleLoginRequest? appleLoginRequest) =>
      (super.noSuchMethod(
              Invocation.method(#loginWithApple, [appleLoginRequest]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse_0()))
          as _i8.Future<_i2.LoginResponse>);
  @override
  _i8.Future<_i2.LoginResponse> loginWithGoogle(
          _i13.GoogleLoginRequest? googleLoginRequest) =>
      (super.noSuchMethod(
              Invocation.method(#loginWithGoogle, [googleLoginRequest]),
              returnValue:
                  Future<_i2.LoginResponse>.value(_FakeLoginResponse_0()))
          as _i8.Future<_i2.LoginResponse>);
  @override
  _i8.Future<void> register(_i14.RegisterRequest? registerRequest) =>
      (super.noSuchMethod(Invocation.method(#register, [registerRequest]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
  @override
  _i8.Future<void> logout() =>
      (super.noSuchMethod(Invocation.method(#logout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i8.Future<void>);
}

/// A class which mocks [LoginResponse].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginResponse extends _i1.Mock implements _i2.LoginResponse {
  MockLoginResponse() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.UserDTO get user => (super.noSuchMethod(Invocation.getter(#user),
      returnValue: _FakeUserDTO_1()) as _i3.UserDTO);
  @override
  _i4.Tokens get token => (super.noSuchMethod(Invocation.getter(#token),
      returnValue: _FakeTokens_2()) as _i4.Tokens);
  @override
  _i5.LoginObject toDomain() =>
      (super.noSuchMethod(Invocation.method(#toDomain, []),
          returnValue: _FakeLoginObject_3()) as _i5.LoginObject);
}

/// A class which mocks [LoginObject].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginObject extends _i1.Mock implements _i5.LoginObject {
  MockLoginObject() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.User get user =>
      (super.noSuchMethod(Invocation.getter(#user), returnValue: _FakeUser_4())
          as _i6.User);
  @override
  _i4.Tokens get token => (super.noSuchMethod(Invocation.getter(#token),
      returnValue: _FakeTokens_2()) as _i4.Tokens);
}
